<?php

namespace Brickstorm\SolidRBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

use Gedmo\Mapping\Annotation as Gedmo;
use Gedmo\Translatable\Translatable;

/**
 * Brickstorm\SolidRBundle\Entity\Area
 */
class Area
{
  
  /** 
  * @Gedmo\Locale
  * we absolutely need this annotation to enable the default locale auto-feeding. 
  *
  * @var string Default locale
  */
  protected $locale;

  public function __toString()
  {
      return $this->name;
  }

  public function getClass()
  {
      switch ($this->name) {
        case 'Education':
          return 'warning';
        break;
        case 'Agriculture':
          return 'success';
        break;
        case 'Construction':
          return 'info';
        break;
        case 'Sante':
          return 'danger';
        break;
        case 'Social':
          return 'danger';
        break;
      }
  }
  
  //autogenerated
    /**
     * @var integer $id
     */
    private $id;

    /**
     * @var integer $parent_id
     */
    private $parent_id;

    /**
     * @var string $name
     */
    private $name;

    /**
     * @var date $created_at
     */
    private $created_at;

    /**
     * @var datetime $updated_at
     */
    private $updated_at;

    /**
     * @var Brickstorm\SolidRBundle\Entity\Area
     */
    private $root;

    /**
     * @var Brickstorm\SolidRBundle\Entity\Area
     */
    private $children;

    /**
     * @var Brickstorm\SolidRBundle\Entity\Area
     */
    private $parent;

    public function __construct()
    {
        $this->children = new \Doctrine\Common\Collections\ArrayCollection();
    }
    
    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set parent_id
     *
     * @param integer $parentId
     */
    public function setParentId($parentId)
    {
        $this->parent_id = $parentId;
    }

    /**
     * Get parent_id
     *
     * @return integer 
     */
    public function getParentId()
    {
        return $this->parent_id;
    }

    /**
     * Set name
     *
     * @param string $name
     */
    public function setName($name)
    {
        $this->name = $name;
    }

    /**
     * Get name
     *
     * @return string 
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set created_at
     *
     * @param date $createdAt
     */
    public function setCreatedAt($createdAt)
    {
        $this->created_at = $createdAt;
    }

    /**
     * Get created_at
     *
     * @return date 
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }

    /**
     * Set updated_at
     *
     * @param datetime $updatedAt
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->updated_at = $updatedAt;
    }

    /**
     * Get updated_at
     *
     * @return datetime 
     */
    public function getUpdatedAt()
    {
        return $this->updated_at;
    }

    /**
     * Set root
     *
     * @param Brickstorm\SolidRBundle\Entity\Area $root
     */
    public function setRoot(\Brickstorm\SolidRBundle\Entity\Area $root)
    {
        $this->root = $root;
    }

    /**
     * Get root
     *
     * @return Brickstorm\SolidRBundle\Entity\Area 
     */
    public function getRoot()
    {
        return $this->root;
    }

    /**
     * Add children
     *
     * @param Brickstorm\SolidRBundle\Entity\Area $children
     */
    public function addArea(\Brickstorm\SolidRBundle\Entity\Area $children)
    {
        $this->children[] = $children;
    }

    /**
     * Get children
     *
     * @return Doctrine\Common\Collections\Collection 
     */
    public function getChildren()
    {
        return $this->children;
    }

    /**
     * Set parent
     *
     * @param Brickstorm\SolidRBundle\Entity\Area $parent
     */
    public function setParent(\Brickstorm\SolidRBundle\Entity\Area $parent)
    {
        $this->parent = $parent;
    }

    /**
     * Get parent
     *
     * @return Brickstorm\SolidRBundle\Entity\Area 
     */
    public function getParent()
    {
        return $this->parent;
    }
    /**
     * @var string $slug
     */
    private $slug;


    /**
     * Set slug
     *
     * @param string $slug
     */
    public function setSlug($slug)
    {
        $this->slug = $slug;
    }

    /**
     * Get slug
     *
     * @return string 
     */
    public function getSlug()
    {
        return $this->slug;
    }
}